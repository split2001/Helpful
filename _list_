print(len([1, 2, 3, 4]))

# Сложение (конкатенация) списков
a = [1, 2, 3]
b = [4, 5, 6]
print(a + b)
print(a + [4])
a = ['hi'] + a
print(a)
a = a + b
print(a)

#Дублирование списка
a = [0] * 5
print(a)
b = [1, 2, 3] * 3
print(b)

# Проверка вхождения элемента в список
a = [2, 5, 8, 9]
print(5 in a)
print(15 in a)

a = [2, 5, 8, 9]
print(max(a))  # Максимальное значение
print(min(a))  # Минимальное значение
print(sum(a))  # Сумма всех элементов

# Сортировка
sort()  #  изменяет объект, к которому применяется этот метод, sorted()  возвращает отсортированный список, не меняя исходный.

my_list.sort() # список my_list отсортирован.

sorterd_my_list = sorted(my_list) - sorterd_my_list # отсортированный список my_list, my_list остался неизменным.

b = [6, 5, 2, 9]
print(sorted(b))
print(sorted(b, reverse=True))
# сам список b не изменился
print(b)
# теперь изменим b
b = sorted(b)
print(b)

numbers = [-214, 181, -139, 448, -20, -917, 32, 422, -895, 198, 284, 472, -986, -964, -989, 29]
numbers.sort(reverse=True)
print(numbers)

# среднее арифметическое списка
a = [2, 5, 9, 8]
print(sum(a) / len(a))

# Срезы в списках.(старт,стоп,шаг)
a = [34, 23, 12, 28, 9, 15]
print(a[2:4])
print(a[:4]) # первые 4 элемента списка
print(a[2::2])
print(a[::3])
print(a[-3:]) # последние 3 элемента списка
print(a[::-1]) # список в обратном порядке

# используя индексы и срезы, помещаем в список новое значение
a = [34, 23, 12, 28, 9, 15]
a[2] = 123
print(a)  # => [34, 23, 123, 28, 9, 15]

a[3:5] = [23, 34]
print(a)  # => [34, 23, 123, 23, 34, 15]

a[1:5] = 23, 34
print(a)  # => [34, 23, 34, 15]

#  функция del
a = [34, 23, 12, 28, 9, 15]
del a[2]
print(a)  # => [34, 23, 28, 9, 15]

# Правильная копия списка, которую в дальнейшем можно редактировать
a = [34, 23, 12, 28, 9, 15]
b = a[:]
print(a)  # => [34, 23, 12, 28, 9, 15]
print(b)  # => [34, 23, 12, 28, 9, 15]

# Метод clear делает список пустым
a = [34, 23, 12, 28, 9, 15]
print(a)  # [34, 23, 12, 28, 9, 15]
a.clear()
print(a)

# Метод .copy копирует список и создает совершенно новый объект
a = [34, 23, 12, 28, 9, 15]
b = a.copy()
print(a)  # [34, 23, 12, 28, 9, 15]
print(b)  # [34, 23, 12, 28, 9, 15]

# Метод count считает сколько раз встретилось в списке переданное значение
a = [34, 23, 12, 28, 9, 15, 23, 2, 23]
print(f'23 встречается {a.count(23)} раз')

# Метод extend позволяет добавлять сразу несколько элементов в список
a = [34, 23, 12, 28, 9, 15]
a.extend([23, 12])
print(a)

#Метод .insert выполняет вставку нового значения в список на определенную позицию. Метод .insert должен принимать
#два значения: index - индекс куда вставляем новое значение и value - что нужно ставить, то есть само значение.
a = [34, 23, 12, 28, 23]
a.insert(1, 99)
print(a)

#Метод pop выполняет изъятие из списка элемента, стоящего на позиции index
a = [34, 23, 12, 28, 23]
a.pop(3)
print(a)

#Метод remove
a = [34, 23, 12, 28, 23, 34]
a.remove(34)
print(a)


a = [34, 23, 12, 28, 23, 34]
print(a.index(23))


# Проверка списка на пустоту
if not a:
    print('Список пуст')
else:
    print('Список не пуст')

# Проверка списка на пустоту
if len(a) == 0:
    print('Список пуст')

# переменная больше на 1,чем последний объект в списке
id_ = a[-1] + 1
